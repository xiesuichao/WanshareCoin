apply plugin: 'com.android.application'
apply from: "${rootProject.rootDir}/project_config.gradle"
apply plugin: 'bugly'

bugly {
    appId = "d33be3e58a"
    appKey = "3787b1a7-2aff-4cf5-a8ea-8ec4f34792f4"
    debug = true
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName().replace("biz-","")]
            }
        }
    }

    signingConfigs {
        debug {
            storeFile file('wanxiang.jks')
            storePassword 'wesharewx'
            keyAlias 'weshare'
            keyPassword 'wesharewx'
        }

        release {
            storeFile file('wanxiang.jks')
            storePassword 'wesharewx'
            keyAlias 'weshare'
            keyPassword 'wesharewx'

        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '.D'
            testCoverageEnabled true
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            zipAlignEnabled true
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "Wanshare_v${defaultConfig.versionName}_${releaseTime()}.apk"
                }
            }
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    repositories {
        flatDir {
            dirs 'libs','../biz-account/libs'
        }
    }
}

task printApkUrl {
    def today = releaseTime()
    def ver = android.defaultConfig.versionName
    def prefix = "Wanshare_v"

    def path = prefix + ver + "_" + today + ".apk"
    new File('apkPath.txt').withWriter('utf-8') {
        writer -> writer.writeLine (path)
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["support-vector-drawable"]
    implementation rootProject.ext.dependencies["constraint-layout"]
    implementation rootProject.ext.dependencies["support-v4"]


    implementation rootProject.ext.dependencies["gson"]
    implementation rootProject.ext.dependencies["picasso"]
    //请求框架
    implementation rootProject.ext.dependencies["rxjava2"]
    implementation rootProject.ext.dependencies["rxandroid2"]
    implementation rootProject.ext.dependencies["retrofit"]
    implementation rootProject.ext.dependencies["adapter-rxjava2"]
    implementation rootProject.ext.dependencies["converter-gson"]
    implementation rootProject.ext.dependencies["logging-interceptor"]
    implementation rootProject.ext.dependencies["status-bar-compat"]
    implementation rootProject.ext.dependencies["zxing-library"]
    implementation rootProject.ext.dependencies["cardview-v7"]
    // 图像剪切
    implementation(rootProject.ext.dependencies["crop"]) {
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }
    implementation rootProject.ext.dependencies["Luban"]
    implementation rootProject.ext.dependencies["eventbus"]
    //网易七鱼客服
    implementation rootProject.ext.dependencies["unicorn"]
    implementation rootProject.ext.dependencies["Java-WebSocket"]
    implementation rootProject.ext.dependencies["recyclerview-swipe"]
    //加入友盟统计
    implementation rootProject.ext.dependencies["umeng-common"]
    implementation rootProject.ext.dependencies["umeng-analytics"]
    //请求权限框架
    implementation rootProject.ext.dependencies["permission"]
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["test-runner"]
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]
    implementation rootProject.ext.dependencies["banner"]
    implementation rootProject.ext.dependencies["marqueeview"]
    implementation rootProject.ext.dependencies["glide"]
    implementation rootProject.ext.dependencies["sophix"]
    implementation rootProject.ext.dependencies["buggly"]
    implementation rootProject.ext.dependencies["buggly_nativecrashreport"]

    if (rootProject.ext.isModuleLib) {
        api project(':biz-account')
        api project(':biz-exchange')
        api project(':biz-project')
        api project(':biz-favorite')
        api project(':biz-market')
        api project(':biz-asset')
        api project(':biz-setting')
    }
    implementation rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]

    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]

    debugImplementation rootProject.ext.dependencies["leakcanary-android"]
    releaseImplementation rootProject.ext.dependencies["leakcanary-android-no-op"]
    debugImplementation rootProject.ext.dependencies["leakcanary-support-fragment"]

    debugImplementation rootProject.ext.dependencies["blockcanary-android"]
    releaseImplementation rootProject.ext.dependencies["blockcanary-no-op"]
}
